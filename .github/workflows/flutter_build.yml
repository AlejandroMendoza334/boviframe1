# .github/workflows/flutter_build.yml
name: Build Flutter Android APK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: /usr/local/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Java 11 (requerido por Android Gradle)
      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      # Instala Flutter SDK (canal stable, x64)
      - name: Install Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      # Acepta licencias de Android
      - name: Accept Android licenses
        run: |
          yes | sdkmanager --licenses

      # Cache de Pub
      - name: Cache Pub
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}

      # Cache de Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      # Instala componentes del SDK de Android
      - name: Install Android SDK
        run: |
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      # Obtiene dependencias de Flutter
      - name: Flutter pub get
        run: flutter pub get

      # Genera el APK de release
      - name: Build release APK
        run: flutter build apk --release

      # Sube el APK como artefacto
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
